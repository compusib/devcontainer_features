name: Test DevContainer Features

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-setup-git-hooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-image: 
          - "mcr.microsoft.com/devcontainers/base:ubuntu"
          - "mcr.microsoft.com/devcontainers/base:debian"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build and test setup-git-hooks feature
      uses: devcontainers/ci@v0.3
      with:
        imageName: test-setup-git-hooks
        cacheFrom: test-setup-git-hooks
        push: never
        runCmd: |
          # Run our comprehensive test script
          ./test-feature.sh
        configFile: .devcontainer/test-devcontainer.json

  test-feature-integration:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test feature in real devcontainer
      uses: devcontainers/ci@v0.3
      with:
        imageName: test-integration
        cacheFrom: test-integration
        push: never
        runCmd: |
          # Test that the feature works in a real workspace scenario
          mkdir -p /workspaces/test-project/git/hooks
          cd /workspaces/test-project
          git init
          git config user.email "test@example.com"
          git config user.name "Test User"
          echo '#!/bin/bash' > git/hooks/pre-commit
          echo 'echo "Integration test hook"' >> git/hooks/pre-commit
          chmod +x git/hooks/pre-commit
          
          # Run setup-git-hooks
          setup-git-hooks --hooks-dir git/hooks --verbose
          
          # Verify hook installation
          test -f .git/hooks/pre-commit
          echo "test" > test.txt
          git add test.txt
          git commit -m "Test commit" | grep "Integration test hook"
        configFile: .devcontainer/test-devcontainer.json
